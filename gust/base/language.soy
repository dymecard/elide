/*
 * Copyright Â© 2020, The Gust Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */
{namespace gust.base}


/**
 * Render a standard language specification into a text designation that includes both the language and the dialect. In
 * many cases, the dialect is simply a country code. For example, a language specification with the main language set to
 * `ENGLISH`, and a dialect of `US`, should produce `en-US`.
 */
{template .languageSpec kind="text"}
  {@param spec: base.LanguageSpec}  /** Specifies information about the language to render into string form. */

  {let $resolvedLanguage kind="text"}
    {switch $spec.language}
      {case 0}en
      {case 1}fr
      {case 2}sp
      {case 3}cn
      {case 4}cn
      {case 5}cn
      {default}en
    {/switch}
  {/let}
  {let $resolvedDialect kind="text"}
    {if isNonnull($spec.dialect)}
      {$spec.dialect}
    {else}
      US
    {/if}
  {/let}
  {if isNonnull($resolvedLanguage)}
    {if isNonnull($resolvedDialect)}
      {$resolvedLanguage}-{$resolvedDialect}
    {else}
      {$resolvedLanguage}
    {/if}
  {/if}
{/template}
