name: "Tools"

on:
  push:
    branches: [ v2 ]
  pull_request:
    branches: [ v2 ]
  schedule:
    - cron: '23 16 * * 3'

jobs:
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java', 'go', 'javascript', 'typescript', 'python', 'ruby' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: Install Bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
      - name: Build Elide
        run: bazel version && bazel build //...
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  pmd:
    name: "Linter: PMD"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: Run PMD
        id: pmd
        uses: pmd/pmd-github-action@967a81f8b657c87f7c3e96b62301cb1a48efef29
        with:
          rulesets: 'rulesets/java/quickstart.xml'
          sourcePath: 'dyme/'
          analyzeModifiedFilesOnly: false
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: pmd-report.sarif
