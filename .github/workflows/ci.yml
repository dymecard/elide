name: CI

on:
  push: {}

env:
  BAZELISK_VERSION: v1.2.1

jobs:
  build:
    name: "Build & Test (Bazel ${{ matrix.bazel }} on ${{ matrix.os[0] }})"

    strategy:
      matrix:
        #os: [["Ubuntu", "ubuntu-latest", "linux-amd64"], ["macOS Catalina", "macos-latest", "darwin-amd64"]]
        #bazel: ["2.0.0", "1.0.0"]
        os: [["Ubuntu", "ubuntu-latest", "linux-amd64"]]
        bazel: ["2.0.0"]

    runs-on: ${{ matrix.os[1] }}

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v1

      - name: Install Bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/${BAZELISK_VERSION}/bazelisk-${{ matrix.os[2] }}"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-${{ matrix.os[2] }} "${GITHUB_WORKSPACE}/bin/bazelisk"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazelisk"

      - name: Select Bazel v${{ matrix.bazel }}
        run: |
          echo "${{ matrix.bazel }}" > .bazelversion

      - name: Build & Test
        run: |
          echo "$SERVICE_KEY" > service-key.json
          export
          make build BAZELISK="${GITHUB_WORKSPACE}/bin/bazelisk" CI=yes CACHE=yes
          make test BAZELISK="${GITHUB_WORKSPACE}/bin/bazelisk" CI=yes CACHE=yes
        env:
          SERVICE_KEY: ${{ secrets.GOOGLE_CREDENTIALS }}
          GOOGLE_APPLICATION_CREDENTIALS: service-key.json

  docs:
    name: "Documentation"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v1
