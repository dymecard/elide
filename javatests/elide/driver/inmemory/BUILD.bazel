##
# Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "//tools/defs/java/testing:junit5.bzl",
    java_test = "java_junit5_test",
)
load(
    "//tools/defs/java:java.bzl",
    "maven",
)
load(
    "//tools/defs/model:model.bzl",
    "javaproto",
)

_COMMON_DEPS = [
    "//java/elide/runtime",
    "//java/elide/runtime/jvm",
    maven("com.google.guava:guava"),
    maven("com.google.protobuf:protobuf-java"),
    maven("org.slf4j:slf4j-api"),
]


java_test(
    name = "InMemoryAdapterNoopCacheTest",
    srcs = ["InMemoryAdapterNoopCacheTest.java"],
    test_package = "elide.driver.inmemory",
    deps = [
        "//java/elide/model:CacheDriver",
        "//java/elide/model:CacheOptions",
        "//java/elide/model:FetchOptions",
        "//java/elide/model:ModelAdapter",
        "//java/elide/model:PersistenceDriver",
        "//java/elide/driver/inmemory:InMemoryAdapter",
        "//java/elide/driver/inmemory:InMemoryCache",
        javaproto("//javatests/elide/model:person"),
        "//javatests/elide/model:GenericPersistenceAdapterTest",
    ] + _COMMON_DEPS,
)

java_test(
    name = "InMemoryAdapterTest",
    srcs = ["InMemoryAdapterTest.java"],
    test_package = "elide.driver.inmemory",
    deps = [
        "//java/elide/model:CacheDriver",
        "//java/elide/model:EncodedModel",
        "//java/elide/model:FetchOptions",
        "//java/elide/model:ModelAdapter",
        "//java/elide/model:ModelCodec",
        "//java/elide/model:WriteOptions",
        "//java/elide/driver/inmemory:InMemoryAdapter",
        "//java/elide/driver/inmemory:InMemoryDriver",
        javaproto("//javatests/elide/model:person"),
        "//javatests/elide/model:GenericPersistenceAdapterTest",
    ] + _COMMON_DEPS,
)

java_test(
    name = "InMemoryAdapterWithCacheTest",
    srcs = ["InMemoryAdapterWithCacheTest.java"],
    test_package = "elide.driver.inmemory",
    deps = [
        "//java/elide/model:CacheDriver",
        "//java/elide/model:CacheOptions",
        "//java/elide/model:FetchOptions",
        "//java/elide/model:ModelAdapter",
        "//java/elide/model:PersistenceDriver",
        "//java/elide/driver/inmemory:InMemoryAdapter",
        "//java/elide/driver/inmemory:InMemoryCache",
        javaproto("//javatests/elide/model:person"),
        "//javatests/elide/model:GenericPersistenceAdapterTest",
    ] + _COMMON_DEPS,
)

java_test(
    name = "InMemoryCacheTest",
    srcs = ["InMemoryCacheTest.java"],
    test_package = "elide.driver.inmemory",
    deps = [
        "//java/elide/model:CacheDriver",
        "//java/elide/model:CacheOptions",
        "//java/elide/model:PersistenceDriver",
        "//java/elide/driver/inmemory:InMemoryCache",
        javaproto("//javatests/elide/model:person"),
        "//javatests/elide/model:GenericCacheDriverTest",
    ] + _COMMON_DEPS,
)

java_test(
    name = "InMemoryDriverTest",
    srcs = ["InMemoryDriverTest.java"],
    test_package = "elide.driver.inmemory",
    deps = [
        "//java/elide/model:CacheDriver",
        "//java/elide/model:EncodedModel",
        "//java/elide/model:FetchOptions",
        "//java/elide/model:ModelCodec",
        "//java/elide/model:WriteOptions",
        "//java/elide/driver/inmemory:InMemoryAdapter",
        "//java/elide/driver/inmemory:InMemoryDriver",
        javaproto("//javatests/elide/model:person"),
        "//javatests/elide/model:GenericPersistenceDriverTest",
    ] + _COMMON_DEPS,
)

test_suite(
    name = "inmemory",
    tests = [
        ":InMemoryAdapterNoopCacheTest",
        ":InMemoryAdapterTest",
        ":InMemoryAdapterWithCacheTest",
        ":InMemoryCacheTest",
        ":InMemoryDriverTest",
    ],
)