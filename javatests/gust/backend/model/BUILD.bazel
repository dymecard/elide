##
# Copyright Â© 2020, The Gust Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "//defs/toolchain/java:testing.bzl",
    java_test = "jdk_test",
)

load(
    "//defs/toolchain:schema.bzl",
    "model",
)

load(
    "//defs/toolchain:deps.bzl",
    "maven",
    "javaproto",
)


model(
    name = "person",
    srcs = ["person.proto"],
    deps = [
        "@proto_common//:type_date",
        "@com_google_protobuf//:timestamp_proto",
    ],
)

_COMMON_DEPS = [
    "//java/gust/backend/model:InvalidModelType",
    "//java/gust/backend/runtime:LoggingTools",
    "@com_google_protobuf//:protobuf_java",
    "@com_google_protobuf//:protobuf_java_util",
    "@com_google_code_findbugs_jsr305//:com_google_code_findbugs_jsr305",
    maven("org.slf4j:slf4j-api"),
]


java_test(
    name = "CollapsedMessageTest",
    srcs = ["CollapsedMessageTest.java"],
    test_package = "gust.backend.model",
    deps = [
        "//java/gust/backend/model:CollapsedMessage",
#        "//java/gust/backend/model:CollapsedMessageCodec",
#        "//java/gust/backend/model:CollapsedMessageSerializer",
        javaproto(":person"),
    ] + _COMMON_DEPS,
)

java_test(
    name = "EncodedModelTest",
    srcs = ["EncodedModelTest.java"],
    test_package = "gust.backend.model",
    deps = [
        "//java/gust/backend/model:EncodedModel",
        "//java/gust/backend/model:EncodingMode",
        javaproto(":person"),
    ] + _COMMON_DEPS,
)

java_library(
    name = "GenericCacheDriverTest",
    srcs = ["GenericCacheDriverTest.java"],
    deps = [
        ":GenericPersistenceDriverTest",
        "//java/gust/backend/model:CacheDriver",
        "//java/gust/backend/model:CacheOptions",
        "//java/gust/backend/model:FetchOptions",
        "//java/gust/backend/model:ModelMetadata",
        "//java/gust/backend/model:PersistenceDriver",
        "//java/gust/backend/model:PersistenceException",
        "//java/gust/backend/runtime:ReactiveFuture",
        maven("com.google.guava:guava"),
        maven("org.junit.jupiter:junit-jupiter-api"),
        javaproto(":person"),
    ] + _COMMON_DEPS,
)

java_library(
    name = "GenericPersistenceAdapterTest",
    srcs = ["GenericPersistenceAdapterTest.java"],
    deps = [
        ":GenericPersistenceDriverTest",
        "//java/gust/backend/model:ModelAdapter",
        "//java/gust/backend/model:PersistenceDriver",
        "//java/gust/backend/runtime:ReactiveFuture",
        javaproto(":person"),
        maven("org.junit.jupiter:junit-jupiter-api"),
        maven("com.google.guava:guava"),
    ] + _COMMON_DEPS,
)

java_library(
    name = "GenericPersistenceDriverTest",
    srcs = ["GenericPersistenceDriverTest.java"],
    deps = [
        "//java/gust/backend/model:FetchOptions",
        "//java/gust/backend/model:ModelMetadata",
        "//java/gust/backend/model:ModelWriteConflict",
        "//java/gust/backend/model:PersistenceDriver",
        "//java/gust/backend/model:UpdateOptions",
        "//java/gust/backend/model:WriteOptions",
        "//java/gust/backend/runtime:ReactiveFuture",
        javaproto(":person"),
        maven("org.junit.jupiter:junit-jupiter-api"),
        maven("com.google.guava:guava"),
        maven("com.google.truth:truth"),
        maven("com.google.truth.extensions:truth-proto-extension"),
    ] + _COMMON_DEPS,
)

java_test(
    name = "ModelExceptionTest",
    srcs = ["ModelExceptionTest.java"],
    test_package = "gust.backend.model",
    deps = [
        "//java/gust/backend/model:InvalidModelType",
        "//java/gust/backend/model:MissingAnnotatedField",
        "//java/gust/backend/model:ModelDeflateException",
        "//java/gust/backend/model:ModelInflateException",
        "//java/gust/backend/model:ModelWriteConflict",
        "//java/gust/backend/model:ModelWriteFailure",
        "//java/gust/backend/model:PersistenceException",
        "//java/gust/backend/model:PersistenceFailure",
        "//java/gust/backend/model:PersistenceOperationFailed",
        "//java/gust/backend/model:WriteOptions",
        javaproto(":person"),
        javaproto("//gust/core:datamodel"),
    ] + _COMMON_DEPS,
)

java_test(
    name = "ModelMetadataTest",
    srcs = ["ModelMetadataTest.java"],
    test_package = "gust.backend.model",
    deps = [
        "//java/gust/backend/model:InvalidModelType",
        "//java/gust/backend/model:MissingAnnotatedField",
        "//java/gust/backend/model:ModelMetadata",
        javaproto(":person"),
        javaproto("//gust/core:datamodel"),
    ] + _COMMON_DEPS,
)

java_test(
    name = "ModelOptionsTest",
    srcs = ["ModelOptionsTest.java"],
    test_package = "gust.backend.model",
    deps = [
        "//java/gust/backend/model:CacheOptions",
        "//java/gust/backend/model:FetchOptions",
        "//java/gust/backend/model:WriteOptions",
        "//java/gust/backend/model:OperationOptions",
    ] + _COMMON_DEPS,
)

java_test(
    name = "PersistenceDriverTest",
    srcs = ["PersistenceDriverTest.java"],
    test_package = "gust.backend.model",
    deps = [
        "//java/gust/backend/model:PersistenceDriver",
        "//java/gust/backend/model:PersistenceOperationFailed",
    ] + _COMMON_DEPS,
)

java_test(
    name = "ProtoModelCodecTest",
    srcs = ["ProtoModelCodecTest.java"],
    test_package = "gust.backend.model",
    deps = [
        javaproto(":person"),
        "//java/gust/backend/model:EncodedModel",
        "//java/gust/backend/model:EncodingMode",
        "//java/gust/backend/model:ModelCodec",
        "//java/gust/backend/model:ProtoModelCodec",
    ] + _COMMON_DEPS,
)
