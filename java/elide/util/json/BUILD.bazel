##
# Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "//tools/defs/kt:defs.bzl",
    "kt_jvm_library",
    "maven",
)

kt_jvm_library(
    name = "JSON",
    srcs = [
        "JacksonConfigurator.kt",
        "JacksonDatabindConfigurator.kt",
        "JSON.kt",
        "JSONProtoSerializer.kt",
        "package-info.java",
    ],
    deps = [
        maven("com.google.protobuf:protobuf-java"),
        maven("com.google.protobuf:protobuf-java-util"),
        maven("com.fasterxml.jackson.core:jackson-annotations"),
        maven("com.fasterxml.jackson.core:jackson-core"),
        maven("com.fasterxml.jackson.core:jackson-databind"),
        maven("com.fasterxml.jackson.datatype:jackson-datatype-jdk8"),
        maven("com.fasterxml.jackson.datatype:jackson-datatype-jsr310"),
        maven("com.fasterxml.jackson.module:jackson-module-blackbird"),
        maven("com.fasterxml.jackson.module:jackson-module-parameter-names"),
        maven("io.micronaut:micronaut-jackson-core"),
        maven("io.micronaut:micronaut-jackson-databind"),
    ],
)

alias(
    name = "json",
    actual = "JSON",
)

filegroup(
    name = "sources",
    srcs = glob(["*.java", "*.kt"]),
)
