##
# Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "//tools/defs/java:java.bzl",
    "java_library",
)

load(
    "//tools/defs/java:java.bzl",
    "maven",
)

java_library(
    name = "LoggingTools",
    srcs = [
        "Logger.java",
        "Logging.java"
    ],
    deps = [
        "//java/elide/runtime:logging",
        maven("org.slf4j:slf4j-api"),
        maven("javax.annotation:javax.annotation-api"),
    ],
)

alias(
    name = "logging",
    actual = ":LoggingTools",
)

java_library(
    name = "ReactiveFuture",
    srcs = ["ReactiveFuture.java"],
    deps = [
        maven("com.google.api:api-common"),
        maven("com.google.code.findbugs:jsr305"),
        maven("com.google.guava:guava"),
        maven("com.google.guava:failureaccess"),
        maven("com.google.protobuf:protobuf-java"),
        maven("org.reactivestreams:reactive-streams"),
        maven("io.reactivex.rxjava2:rxjava"),
    ],
)

alias(
    name = "reactive",
    actual = ":ReactiveFuture",
)

java_library(
    name = "jvm",
    srcs = ["package-info.java"],
    exports = [
        ":logging",
        ":reactive",
    ]
)

filegroup(
    name = "sources",
    srcs = glob(["*.java"]),
)
