##
# Copyright Â© 2020, The Gust Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "//defs/toolchain/java:rules.bzl",
    "jdk_library",
    "micronaut_library",
)

load(
    "//defs/toolchain:templates.bzl",
    "template_library",
)

load(
    "//defs/toolchain:deps.bzl",
    "maven",
)


filegroup(
    name = "sources",
    srcs = glob(["*.java"]) + [
        "//java/gust/backend/driver:sources",
        "//java/gust/backend/model:sources",
        "//java/gust/backend/runtime:sources",
        "//java/gust/backend/transport:sources",
    ]
)

alias(
    name = "base",
    actual = "@java_base//image",
)

alias(
    name = "native",
    actual = "@native_base//image",
)

jdk_library(
    name = "package-info",
    srcs = ["package-info.java"],
)

micronaut_library(
    name = "AppController",
    srcs = ["AppController.java"],
    deps = [
        ":BaseController",
        "//java/gust/backend:PageContextManager",
    ],
)

micronaut_library(
    name = "BaseController",
    srcs = ["BaseController.java"],
    deps = [
        "//java/gust/backend:PageContext",
        "//java/gust/backend:PageContextManager",
    ]
)

micronaut_library(
    name = "PageRender",
    srcs = ["PageRender.java"],
    proto_deps = ["//gust/page:page_proto"],
)

micronaut_library(
    name = "PageContext",
    srcs = ["PageContext.java"],
    deps = [":PageRender"],
    proto_deps = ["//gust/page:page_proto"],
)

micronaut_library(
    name = "PageContextManager",
    srcs = ["PageContextManager.java"],
    deps = [
        ":PageContext",
        ":PageRender",
    ],
)

micronaut_library(
    name = "TemplateProvider",
    srcs = ["TemplateProvider.java"],
    templates = ["//gust/page:page_soy"],
    deps = [
        "@io_micronaut_micronaut_views_soy",
    ],
)

jdk_library(
    name = "ApplicationBoot",
    srcs = ["ApplicationBoot.java"],
    deps = [
        "@com_google_code_findbugs_jsr305",
        maven("io.micronaut:micronaut-runtime"),
    ],
)

jdk_library(
    name = "Application",
    srcs = ["Application.java"],
    deps = [
        ":ApplicationBoot",
        "@com_google_code_findbugs_jsr305",
        maven("io.micronaut:micronaut-runtime"),
    ],
    runtime_deps = [
        maven("io.micronaut:micronaut-runtime"),
    ],
)

jdk_library(
    name = "backend",
    runtime_deps = [
        ":BaseController",
        ":TemplateProvider",
        ":ApplicationBoot",
        ":Application",
    ],
    exports = [
        # Base Package
        ":package-info",
        ":BaseController",
        ":TemplateProvider",
        ":ApplicationBoot",
        ":Application",

        # Model Tooling
        "//java/gust/backend/model:model",

        # Built-in Drivers
        "//java/gust/backend/driver:driver",

        # Transport Tooling
        "//java/gust/backend/transport:transport",
    ],
)
