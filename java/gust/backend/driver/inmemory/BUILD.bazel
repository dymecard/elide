##
# Copyright Â© 2020, The Gust Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "//defs/toolchain/java:rules.bzl",
    java_library = "jdk_library",
)

load(
    "//defs/toolchain:deps.bzl",
    "maven",
    "javaproto",
)

_COMMON_DEPS = [
    "@javax_annotation_api",
    "@com_google_code_findbugs_jsr305",
    "@com_google_protobuf//:protobuf_java",
    "//java/gust/backend/runtime:runtime",
    maven("org.slf4j:slf4j-api"),
]


java_library(
    name = "package-info",
    srcs = ["package-info.java"],
)

java_library(
    name = "InMemoryCache",
    srcs = ["InMemoryCache.java"],
    deps = [
        "//java/gust/backend/model:CacheDriver",
        "//java/gust/backend/model:CacheOptions",
        "//java/gust/backend/model:DeleteOptions",
        "//java/gust/backend/model:FetchOptions",
        "//java/gust/backend/model:ModelCodec",
        "//java/gust/backend/model:ModelMetadata",
        "//java/gust/backend/model:UpdateOptions",
        "//java/gust/backend/model:WriteOptions",
        maven("com.google.guava:guava"),
        maven("org.reactivestreams:reactive-streams"),
    ] + _COMMON_DEPS,
)

java_library(
    name = "InMemoryAdapter",
    srcs = ["InMemoryAdapter.java"],
    deps = [
        ":InMemoryDriver",
        "//java/gust/backend/model:CacheDriver",
        "//java/gust/backend/model:EncodingMode",
        "//java/gust/backend/model:EncodedModel",
        "//java/gust/backend/model:InvalidModelType",
        "//java/gust/backend/model:ModelAdapter",
        "//java/gust/backend/model:ModelCodec",
        "//java/gust/backend/model:ModelMetadata",
        "//java/gust/backend/model:PersistenceDriver",
        "//java/gust/backend/model:ProtoModelCodec",
        maven("com.google.guava:guava"),
        maven("org.reactivestreams:reactive-streams"),
        javaproto("//gust/core:datamodel"),
    ] + _COMMON_DEPS,
)

java_library(
    name = "InMemoryDriver",
    srcs = ["InMemoryDriver.java"],
    deps = [
        "//java/gust/backend/model:DeleteOptions",
        "//java/gust/backend/model:EncodedModel",
        "//java/gust/backend/model:FetchOptions",
        "//java/gust/backend/model:ModelCodec",
        "//java/gust/backend/model:ModelWriteConflict",
        "//java/gust/backend/model:ModelWriteFailure",
        "//java/gust/backend/model:ModelMetadata",
        "//java/gust/backend/model:PersistenceDriver",
        "//java/gust/backend/model:PersistenceException",
        "//java/gust/backend/model:UpdateOptions",
        "//java/gust/backend/model:WriteOptions",
        maven("com.google.guava:guava"),
        javaproto("//gust/core:datamodel"),
    ] + _COMMON_DEPS,
)

java_library(
    name = "InMemoryManager",
    srcs = ["InMemoryManager.java"],
    deps = [
        ":InMemoryDriver",
        "//java/gust/backend/model:PersistenceManager",
    ] + _COMMON_DEPS,
)

java_library(
    name = "inmemory",
    exports = [
        ":package-info",
        ":InMemoryAdapter",
        ":InMemoryCache",
        ":InMemoryDriver",
        ":InMemoryManager",
    ]
)


filegroup(
    name = "sources",
    srcs = glob(["*.java"]),
)
