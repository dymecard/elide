##
# Copyright Â© 2020, The Gust Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

# bazelrc file
# bazel >= 0.18 looks for %workspace%/.bazelrc (which redirects here)
# Older bazel versions look for %workspace%/tools/bazel.rc (this file)
# See https://github.com/bazelbuild/bazel/issues/6319


##
# Base Settings
##

build --show_timestamps
build --embed_label=alpha
build --define project=elide-ai
build --define cluster=_cluster_
build --nojava_header_compilation
build --noexperimental_worker_multiplex

build:dev --output_filter='^//(gust|defs|java|js|tools|config|images|javatests|tests|jstests):'
build:dev --define=project=elide-ai
build:dev --define=todolist_release_tag=latest
build:adc --google_default_credentials=true
#build:devkey --google_credentials=crypto/build-key.json
#test:devkey --action_env=GOOGLE_APPLICATION_CREDENTIALS

build --watchfs
build --symlink_prefix=dist/
build --nolegacy_external_runfiles
build --incompatible_strict_action_env
build --javacopt="-encoding UTF-8"
build --strict_java_deps=strict
build --use_ijars
build --interface_shared_objects

build --java_toolchain=@bazel_tools//tools/jdk:toolchain_java11
build --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_java11
#build --java_toolchain=@bazel_tools//tools/jdk:toolchain_vanilla
#build --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_vanilla

build --workspace_status_command=./tools/bazel_stamp_vars.sh

build:android --java_toolchain=@bazel_tools//tools/jdk:toolchain_java8
build:android --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_java8
build:android --workspace_status_command=./tools/bazel_stamp_vars.sh

run --incompatible_strict_action_env
run --workspace_status_command=./tools/bazel_stamp_vars.sh

build:dev --define=todolist_release_tag=latest

build:ci --worker_sandboxing
build:ci --spawn_strategy=sandboxed
build:ci --strategy=SassCompiler=local
build:ci --strategy=Javac=sandboxed
build:ci --strategy=J2cl=sandboxed
build:ci --strategy=Closure=sandboxed
build:ci --strategy=KotlinCompile=sandboxed
build:ci --strategy=TypeScriptCompile=sandboxed
build:ci --jobs=32
build:ci --build_metadata=ROLE=CI

build --build_metadata=TEST_GROUPS=//javatests,//jstests,//tests
build --build_metadata=REPO_URL=https://github.com/CookiesCo/elide.git
build --build_metadata=VISIBILITY=PUBLIC
build:buildbuddy --bes_results_url=https://app.buildbuddy.io/invocation/
build:buildbuddy --bes_backend=grpcs://cloud.buildbuddy.io
build:buildbuddy --remote_cache=grpcs://cloud.buildbuddy.io
build:buildbuddy --remote_timeout=3600
build:buildbuddy --remote_header=x-buildbuddy-api-key=6R3w0oRMdKhN3cobqlIl

build:ci --worker_max_instances=4
build:ci --local_ram_resources="HOST_RAM*.9"
build:ci --experimental_persistent_javac
build:ci --strategy=JdepsMerger=worker
run:ci --worker_max_instances=4
run:ci --local_ram_resources="HOST_RAM*.9"
run:ci --experimental_persistent_javac
common:ci --curses=no
build:ci --verbose_failures
build:ci --worker_verbose
run:ci --verbose_failures
run:ci --worker_verbose
test:ci --test_output=errors
test:ci --nocache_test_results
test:ci --test_verbose_timeout_warnings
build:ci --repository_cache=~/.cache/bazel/repo
run:ci --repository_cache=~/.cache/bazel/repo
run:ci --test_env=DISPLAY
fetch:ci --repository_cache=~/.cache/bazel/repo
query:ci --repository_cache=~/.cache/bazel/repo
build:ci --disk_cache=~/.cache/bazel/repo
run:ci --disk_cache=~/.cache/bazel/repo
build:ci --remote_upload_local_results=true
run:ci --remote_upload_local_results=true

build:release --compilation_mode=opt
build:release --copt=-Wframe-larger-than=16384

build:debug --compilation_mode=dbg
build:debug --sandbox_debug
build:dev --spawn_strategy=local
build:dev --strategy=J2cl=worker
build:dev --strategy=KotlinCompile=worker
build:dev --strategy=Closure=worker
build:dev --strategy=TypeScriptCompile=worker
build:dev --experimental_persistent_javac
#build:dev --define=ABSOLUTE_JAVABASE=/Library/Java/JavaVirtualMachines/zulu-15.jdk/Contents/Home
#build:dev --define=ZULUBASE=/Library/Java/JavaVirtualMachines/zulu-15.jdk/Contents/Home
#build:dev --javabase=//defs/toolchain/java:java_runtime
build:dev --disk_cache=~/.cache/bazel-disk-cache

build:android --define=ABSOLUTE_JAVABASE=/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home
build:android --host_javabase=@bazel_tools//tools/jdk:absolute_javabase
build:android --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_vanilla
build:android --java_toolchain=@bazel_tools//tools/jdk:toolchain_vanilla

query --output=label_kind

# This .bazelrc file contains all of the flags required for the provided
# toolchain with Remote Build Execution.
# Note your WORKSPACE must contain an rbe_autoconfig target with
# name="rbe_default" to use these flags as-is.
build:remote --jobs=5

# Platform flags:
# The toolchain container used for execution is defined in the target indicated
# by "extra_execution_platforms", "host_platform" and "platforms".
# More about platforms: https://docs.bazel.build/versions/master/platforms.html
build:remote --extra_toolchains=@rbe_default//config:cc-toolchain
build:remote --extra_execution_platforms=@rbe_default//config:platform
build:remote --host_platform=@rbe_default//config:platform
build:remote --platforms=@rbe_default//config:platform
build:remote --host_javabase=@rbe_default//java:jdk
build:remote --javabase=@rbe_default//java:jdk
build:remote --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8
build:remote --java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8
build:remote --crosstool_top=@rbe_default//cc:toolchain
build:remote --action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
build:remote --spawn_strategy=remote

# Starting with Bazel 0.27.0 strategies do not need to be explicitly
# defined. See https://github.com/bazelbuild/bazel/issues/7480
build:remote --define=EXECUTOR=remote

# Enable remote execution so actions are performed on the remote systems.
build:remote --remote_executor=grpcs://remotebuildexecution.googleapis.com

# Enforce stricter environment rules, which eliminates some non-hermetic
# behavior and therefore improves both the remote cache hit rate and the
# correctness and repeatability of the build.
build:remote --incompatible_strict_action_env=true

# Set a higher timeout value, just in case.
build:remote --remote_timeout=3600

# Enable authentication. This will pick up application default credentials by
# default. You can use --google_credentials=some_file.json to use a service
# account credential instead.
build:remote --google_default_credentials=true

#test --test_env=GOOGLE_APPLICATION_CREDENTIALS
test --instrumentation_filter="-/javatests[/:],-/test/java[/:],-/tests[/:],-/jstests[/:],-/protobuf,-protobuf,-/types,-types,-/java/org[/:],-js,-/js"

coverage --collect_code_coverage
coverage --combined_report=lcov
coverage --test_env=DISPLAY
coverage --noinstrument_test_targets
coverage --ui_event_filters=-DEBUG
coverage --nocache_test_results
coverage --experimental_fetch_all_coverage_outputs
#coverage --experimental_split_coverage_postprocessing

try-import %workspace%/.bazelrc.user
