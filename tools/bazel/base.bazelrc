##
# Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

#
# Bazel: Baseline Settings
#

startup --host_jvm_args=-Dbazel.DigestFunction=SHA256

build --watchfs

build --worker_sandboxing
build --strategy=Closure=worker
build --strategy=JdepsMerger=worker
build --strategy=KotlinCompile=worker
build --strategy=SwiftCompile=sandboxed

build --javacopt='--release 11'
build --javacopt="-encoding UTF-8"
build --use_ijars
build --java_header_compilation
build --interface_shared_objects
build --enable_platform_specific_config
build --client_env=CC=clang
build --cxxopt=-std=c++17 --host_cxxopt=-std=c++17 --client_env=BAZEL_CXXOPTS=-std=c++17

build --apple_generate_dsym
build --objc_generate_linkmap
build --ios_minimum_os=14.0.0
build --macos_minimum_os=10.12
build --xcode_version=13.2.1

build --java_language_version=11
build --tool_java_language_version=11
build --java_runtime_version=remotejdk_11
build --tool_java_runtime_version=remotejdk_11

build --incompatible_strict_action_env
build --incompatible_java_common_parameters=false

build --experimental_persistent_javac
build --experimental_allow_tags_propagation
build --experimental_split_xml_generation
build --experimental_cc_shared_library
build --experimental_inmemory_dotd_files
build --experimental_inmemory_jdeps_files
build --experimental_strict_java_deps=strict
build --experimental_worker_multiplex
build --experimental_strict_action_env
build --experimental_use_validation_aspect
build --experimental_fetch_all_coverage_outputs
build --define=experimental_use_abi_jars=1

# Don't warn on deprecations when compiling protobufs.
# This generates a lot of spurious warnings when compiling the definitions of proto fields
# which are marked deprecated.
build --per_file_copt=.*\.pb\.cc@-Wno-deprecated-declarations
# Disable diagnostics on external repositories as we don't control them.
build --per_file_copt=external/.*@-w
# Disable diagnostics in host mode. There is no host_per_file_copt and
# everything we build in the host configuration we either also build in the
# target configuration or is external, so we can't control it.
# If/when Bazel supports --host_per_file_copt, we could use that instead:
# https://github.com/bazelbuild/bazel/issues/12406.
build --host_copt=-w

run --incompatible_strict_action_env

test --incompatible_exclusive_test_sandboxed

coverage --combined_report=lcov
coverage --collect_code_coverage
coverage --instrumentation_filter="^//"
coverage --instrument_test_targets
