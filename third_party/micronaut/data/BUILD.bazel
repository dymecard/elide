##
# Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "//tools/defs/micronaut:data.bzl",
    "MICRONAUT_DATA_DEPS",
    "MICRONAUT_DATA_RUNTIME_DEPS",
    "MICRONAUT_DATA_ENGINES",
    "MICRONAUT_DATA_ENGINE_DEPS",
    "MICRONAUT_DATA_ENGINE_EXPORTS",
    "MICRONAUT_DATA_ENGINE_RUNTIME_DEPS",
    "MICRONAUT_DATA_HIBERNATE_DEPS",
    "MICRONAUT_DATA_HIBERNATE_RUNTIME_DEPS",
    "MICRONAUT_DATA_HIKARI_DEPS",
    "MICRONAUT_DATA_HIKARI_RUNTIME_DEPS",
    "MICRONAUT_DATA_JDBC_EXPORTS",
    "MICRONAUT_DATA_JPA_EXPORTS",
    "MICRONAUT_DATA_JCACHE_DEPS",
    "MICRONAUT_DATA_JCACHE_RUNTIME_DEPS",
    "MICRONAUT_DATA_GRAALVM_DEPS",
    "MICRONAUT_DATA_GRAALVM_RUNTIME_DEPS",
)
load(
    "@rules_java//java:defs.bzl",
    "java_library",
    "java_plugin",
)
load(
    "//tools/defs/java:java.bzl",
    "maven",
)

java_library(
    name = "jdbc",
    exports = MICRONAUT_DATA_JDBC_EXPORTS,
)

java_library(
    name = "hibernate",
    exports = MICRONAUT_DATA_HIBERNATE_DEPS,
    runtime_deps = MICRONAUT_DATA_HIBERNATE_RUNTIME_DEPS
)

java_library(
    name = "hikari",
    exports = MICRONAUT_DATA_HIKARI_DEPS,
    runtime_deps = MICRONAUT_DATA_HIKARI_RUNTIME_DEPS
)

java_library(
    name = "jcache",
    exports = MICRONAUT_DATA_JCACHE_DEPS,
    runtime_deps = MICRONAUT_DATA_JCACHE_RUNTIME_DEPS
)

java_library(
    name = "graalvm",
    exports = MICRONAUT_DATA_GRAALVM_DEPS,
    runtime_deps = MICRONAUT_DATA_GRAALVM_RUNTIME_DEPS
)

java_library(
    name = "jpa",
    exports = MICRONAUT_DATA_JPA_EXPORTS,
)

[
    java_library(
        name = name,
        deps = MICRONAUT_DATA_ENGINE_DEPS.get(name, []),
        runtime_deps = MICRONAUT_DATA_ENGINE_RUNTIME_DEPS.get(name, []),
        exports = MICRONAUT_DATA_ENGINE_EXPORTS.get(name, []),
    ) for name in MICRONAUT_DATA_ENGINES
]

java_library(
    name = "data",
    exports = MICRONAUT_DATA_DEPS,
    runtime_deps = MICRONAUT_DATA_RUNTIME_DEPS,
)
