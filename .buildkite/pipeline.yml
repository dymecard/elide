steps:
  - command: "make build CI=yes"
    label: ":bazel: Build: Framework"

  - command: "make build CI=yes && make test CI=yes TESTS='//javatests/... -javatests/server:BrowserBasicServerTest_chromium-local -javatests/server:BrowserBasicServerTest_firefox-local -javatests/server:BasicTestApplication-native -javatests/ssr:SSRTestApplication-native-bin'"
    label: ":coverage: Testsuite"

  - wait

  - command: "make build CI=yes TARGETS='//javatests/ssr:SSRTestApplication-native-bin && make build CI=yes TARGETS='//javatests/server:BasicTestApplication-native-bin"
    label: ":java: Build: Native Binaries"

  - wait

  - command: "docker pull us.gcr.io/elide-tools/base/alpine"
    label: ":docker: Pull Bases"
    branches:
      - "master"
      - "release/*"
      - "feature/packaging"

  - command: "make build samples CI=yes"
    label: ":gcloud: Publish: Images"
    branches:
      - "master"
      - "release/*"
      - "feature/packaging"

  - wait

  - command: "echo 'registry=https://npm.pkg.github.com/sgammon' > .npmrc && npm publish"
    label: ":octocat: + :npm: Staging: NPM"
    if: build.tag != null

  - command: "./gradlew build publish -Pgithub=true -Psigning=false"
    label: ":octocat: + :mvn: Staging: Maven"
    if: build.tag != null

  - command: "make release-images CI=yes REGISTRY=docker.pkg.github.com/sgammon/gust"
    label: ":octocat: + :whale: Staging: Docker"
    if: build.tag != null

  - wait

  - input: "Request Release"
    if: build.tag != null
    fields:
      - select: "Stream"
        key: "release-stream"
        hint: "Which release stream does this belong in? :fork:"
        options:
          - label: "Beta"
            value: "beta"
          - label: "Stable"
            value: "stable"

  - wait

  - command: "rm -f .npmrc && rm -f package.json && cp -fv package-global.json package.json && npm publish"
    label: ":npm: Release: NPM"
    if: build.tag != null

  #- command: "./gradlew build publish -Psigning=true -Psigning.gnupg.keyName=E5D4CAD76D96F4AB2C879C96EF742ACE1E58CCB7"
  #  label: ":mvn: Release: Maven"
  #  if: build.tag != null

  - command: "make release-images CI=yes"
    label: ":docker: Release: Docker"
    if: build.tag != null
