##
# Copyright Â© 2020, The Gust Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "@rules_java//java:defs.bzl",
    "java_runtime",
    "java_toolchain",
)

load(
    "@bazel_skylib//:bzl_library.bzl",
    "bzl_library",
)

load(
    "@bazel_tools//tools/jdk:default_java_toolchain.bzl",
    "DEFAULT_JAVACOPTS",
    "JDK8_JVM_OPTS",
    "JDK9_JVM_OPTS",
)


bzl_library(
    name = "java-toolchain",
    srcs = [
        "repos.bzl",
        "rules.bzl",
        "testing.bzl",
    ],
)


## Java Runtime: `zulu`
## ------------------------
## Activates when we are running in IntelliJ/locally.
java_runtime(
    name = "zulu_runtime",
    java_home = "$(ZULUBASE)",
    visibility = ["//visibility:private"],
)


## -- Public Interface -- ##

## Java Runtime
## ------------------------
## References the active Java runtime.
alias(
    name = "java_runtime",
    actual = select({
        "//defs/conditions:zulu": ":zulu_runtime",
        "//conditions:default": "@embedded_jdk//:jdk",
    }),
)


## Java Runtime
## ------------------------
## Customized Java toolchain for JDK11.
java_toolchain(
  name = "toolchain",
  source_version = "11",
  target_version = "11",
  javac_supports_workers = True,
  forcibly_disable_header_compilation = False,
  misc = DEFAULT_JAVACOPTS,

  bootclasspath = ["@bazel_tools//tools/jdk:platformclasspath"],
  ijar = ["@bazel_tools//tools/jdk:ijar"],
  genclass = ["@bazel_tools//tools/jdk:genclass"],
  javabuilder = ["@bazel_tools//tools/jdk:javabuilder"],
  singlejar = ["@bazel_tools//tools/jdk:singlejar"],
  jacocorunner = "@bazel_tools//tools/jdk:JacocoCoverageFilegroup",
  tools = [
    "@bazel_tools//tools/jdk:javac_jar",
    "@bazel_tools//tools/jdk:java_compiler_jar",
    "@bazel_tools//tools/jdk:jdk_compiler_jar",
  ],
  jvm_opts = select({
    "@bazel_tools//src/conditions:openbsd": JDK8_JVM_OPTS,
    "//conditions:default": JDK9_JVM_OPTS,
  }),

  # Override: Turbine
  header_compiler = ["@remote_java_tools//:TurbineDirect"],
  header_compiler_direct = ["@remote_java_tools//:TurbineDirect"],
)
